//运算符
//
//Go中的运算符均是从左至右结合
//
//优先级（从高到低）
//
//^     !                                               （一元运算符）
//*     /    %    <<    >>    &      &^
//+     -     |      ^                                （二元运算符）
//==   !=   <    <=    >=    >
//<-                                              （专门用于channel）
//&&
//||

package main

import (
	"fmt"
)

func main() {
	//  https://github.com/LiYanBing/the-way-to-go_ZH_CN/blob/master/eBook/04.5.md
	//  ^该运算符与异或运算符一同使用，即 m^x，对于无符号 x 使用“全部位设置为 1”，对于有符号 x 时使用 m=-1。例如：  ^2 = ^10 = -01 ^ 10 = -11

	fmt.Println(^2)    //-3
	fmt.Println(1 ^ 2) //3

	// & 两个是1才是1
	// | 只要有一个是1就是1
	// ^ 只有一个是1才是1
	// &^ 第二个是1的时候,强制将第一个地相同位数强制改称0

	//    6:0110
	//   11:1011
	// &   :0010   2
	// |   :1111   15
	// ^   :1101   13
	// &^  :0100   4
	fmt.Println(6 & 11)  //2
	fmt.Println(6 | 11)  //15
	fmt.Println(6 ^ 11)  //13
	fmt.Println(6 &^ 11) //4

	a := 0
	if a > 0 && (10/a) > 1 {
		fmt.Println("ok")
	}

	//指针
	//
	//Go虽然保留了指针，但与其它编程语言不同的是，在Go当中不
	//支持指针运算以及”->”运算符，而直接采用”.”选择符来操作指针
	//目标对象的成员
	//
	//操作符”&”取变量地址，使用”*”通过指针间接访问目标对象
	//默认值为 nil 而非 NULL
	//
	//
	//递增递减语句
	//
	//在Go当中，++ 与 -- 是作为语句而并不是作为表达式

	zz := 1
	var p *int = &zz
	fmt.Println(p)

	zz2 := 2
	var p2 = &zz2
	fmt.Println(p2)

}
